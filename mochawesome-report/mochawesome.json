{
  "stats": {
    "suites": 5,
    "tests": 21,
    "passes": 16,
    "pending": 5,
    "failures": 0,
    "start": "2023-03-01T21:24:05.675Z",
    "end": "2023-03-01T21:24:05.732Z",
    "duration": 57,
    "testsRegistered": 21,
    "passPercent": 100,
    "pendingPercent": 23.809523809523807,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2302a0ed-dba1-4f25-b547-a7b1ad8cc6e1",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6182b20c-1974-4ae5-b329-59bee62c4043",
          "title": "API Test Suite",
          "fullFile": "C:\\JSProject\\js_automated_testing_intro\\src\\tests\\specs\\api.spec.js",
          "file": "\\src\\tests\\specs\\api.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST resource",
              "fullTitle": "API Test Suite POST resource",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "5c0cfa6d-0151-48aa-82af-7b4b68de6588",
              "parentUUID": "6182b20c-1974-4ae5-b329-59bee62c4043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET a resource",
              "fullTitle": "API Test Suite GET a resource",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "cb925857-6047-475b-9e52-36102f245339",
              "parentUUID": "6182b20c-1974-4ae5-b329-59bee62c4043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT resource",
              "fullTitle": "API Test Suite PUT resource",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "087c5376-dce4-4bc7-9a4b-5231379a0962",
              "parentUUID": "6182b20c-1974-4ae5-b329-59bee62c4043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE resource",
              "fullTitle": "API Test Suite DELETE resource",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "88c6fb57-5a7f-449b-a762-5015ba19bcbf",
              "parentUUID": "6182b20c-1974-4ae5-b329-59bee62c4043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET a resource",
              "fullTitle": "API Test Suite GET a resource",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "4b8e262f-cbcd-4ea1-9131-1621f21e8f80",
              "parentUUID": "6182b20c-1974-4ae5-b329-59bee62c4043",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "5c0cfa6d-0151-48aa-82af-7b4b68de6588",
            "cb925857-6047-475b-9e52-36102f245339",
            "087c5376-dce4-4bc7-9a4b-5231379a0962",
            "88c6fb57-5a7f-449b-a762-5015ba19bcbf",
            "4b8e262f-cbcd-4ea1-9131-1621f21e8f80"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "555ea321-d572-422c-9ad1-e66b5dc4e50c",
          "title": "isNumberEven tests",
          "fullFile": "C:\\JSProject\\js_automated_testing_intro\\src\\tests\\numbers-validator\\isNumberEven.spec.js",
          "file": "\\src\\tests\\numbers-validator\\isNumberEven.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isNumberEven tests\"",
              "fullTitle": "isNumberEven tests \"before each\" hook in \"isNumberEven tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "13c05d67-f8c6-49e8-96e2-73d3138623c9",
              "parentUUID": "555ea321-d572-422c-9ad1-e66b5dc4e50c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isNumberEven tests\"",
              "fullTitle": "isNumberEven tests \"after each\" hook in \"isNumberEven tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null",
              "err": {},
              "uuid": "20987ff3-68f0-4626-a55c-c345b299b16b",
              "parentUUID": "555ea321-d572-422c-9ad1-e66b5dc4e50c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return true when provided an even number",
              "fullTitle": "isNumberEven tests should return true when provided an even number",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(4);\nexpect(validationResults).to.be.equal(true)",
              "err": {},
              "uuid": "04f0ae4c-4204-44d3-b243-efb9a2917563",
              "parentUUID": "555ea321-d572-422c-9ad1-e66b5dc4e50c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when provided an odd number",
              "fullTitle": "isNumberEven tests should return false when provided an odd number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(5);\nexpect(validationResults).to.be.equal(false)",
              "err": {},
              "uuid": "3985ca8b-a701-42b1-bb50-0eb260366be8",
              "parentUUID": "555ea321-d572-422c-9ad1-e66b5dc4e50c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when provided a string",
              "fullTitle": "isNumberEven tests should throw an error when provided a string",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n    validator.isNumberEven('4');\n}).to.throw('[4] is not of type \"Number\" it is of type \"string\"')",
              "err": {},
              "uuid": "02ab3974-df77-4792-9a47-93b500aafa0b",
              "parentUUID": "555ea321-d572-422c-9ad1-e66b5dc4e50c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when no value is provided",
              "fullTitle": "isNumberEven tests should throw an error when no value is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n    validator.isNumberEven();\n}).to.throw('[undefined] is not of type \"Number\" it is of type \"undefined\"')",
              "err": {},
              "uuid": "b03957aa-27a9-44f1-9a34-a1ddedd2f0e1",
              "parentUUID": "555ea321-d572-422c-9ad1-e66b5dc4e50c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04f0ae4c-4204-44d3-b243-efb9a2917563",
            "3985ca8b-a701-42b1-bb50-0eb260366be8",
            "02ab3974-df77-4792-9a47-93b500aafa0b",
            "b03957aa-27a9-44f1-9a34-a1ddedd2f0e1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6cbce833-f881-45a4-992f-897f820887e9",
          "title": "getEvenNumbersFromArray tests",
          "fullFile": "C:\\JSProject\\js_automated_testing_intro\\src\\tests\\numbers-validator\\isNumberEven.spec.js",
          "file": "\\src\\tests\\numbers-validator\\isNumberEven.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"getEvenNumbersFromArray tests\"",
              "fullTitle": "getEvenNumbersFromArray tests \"before each\" hook in \"getEvenNumbersFromArray tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "4bb0b0df-4a36-4aa3-a4ea-409314ce3b38",
              "parentUUID": "6cbce833-f881-45a4-992f-897f820887e9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"getEvenNumbersFromArray tests\"",
              "fullTitle": "getEvenNumbersFromArray tests \"after each\" hook in \"getEvenNumbersFromArray tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null",
              "err": {},
              "uuid": "1f26d283-b575-4790-a746-8aa6f35f851f",
              "parentUUID": "6cbce833-f881-45a4-992f-897f820887e9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return array of even numbers",
              "fullTitle": "getEvenNumbersFromArray tests should return array of even numbers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrayOfNumbers = [1,2,3];\nconst evenNumbersOfArray = validator.getEvenNumbersFromArray(arrayOfNumbers);\nexpect(evenNumbersOfArray).to.be.eql([2])",
              "err": {},
              "uuid": "4eed9b43-fe3b-4956-9f1e-d2389d51fc3d",
              "parentUUID": "6cbce833-f881-45a4-992f-897f820887e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an empty array when no even numbers are passed in",
              "fullTitle": "getEvenNumbersFromArray tests should return an empty array when no even numbers are passed in",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrayOfNumbers = [3,5,7,9];\nconst evenNumbersOfArray = validator.getEvenNumbersFromArray(arrayOfNumbers);\n//expect(evenNumbersOfArray).to.be.eql([])\nassert(evenNumbersOfArray, [])",
              "err": {},
              "uuid": "47df5b6d-0234-403f-b671-923ee318d5ac",
              "parentUUID": "6cbce833-f881-45a4-992f-897f820887e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if array is not full of numbers",
              "fullTitle": "getEvenNumbersFromArray tests should throw an error if array is not full of numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n    validator.getEvenNumbersFromArray([1,'2',3]);\n}).to.throw('[1,2,3] is not an array of \"Numbers\"')",
              "err": {},
              "uuid": "8611bb8b-6e2e-4088-a2ae-0a0b1aebd817",
              "parentUUID": "6cbce833-f881-45a4-992f-897f820887e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when no value is provided ",
              "fullTitle": "getEvenNumbersFromArray tests should throw an error when no value is provided ",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n    validator.getEvenNumbersFromArray();\n}).to.throw('[undefined] is not an array of \"Numbers\"')",
              "err": {},
              "uuid": "ad8b7de1-e5bb-4df8-9e12-c220a28ad71f",
              "parentUUID": "6cbce833-f881-45a4-992f-897f820887e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4eed9b43-fe3b-4956-9f1e-d2389d51fc3d",
            "47df5b6d-0234-403f-b671-923ee318d5ac",
            "8611bb8b-6e2e-4088-a2ae-0a0b1aebd817",
            "ad8b7de1-e5bb-4df8-9e12-c220a28ad71f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cd40c668-93cb-436e-aad2-72fc2489975c",
          "title": "isAllNumbers tests",
          "fullFile": "C:\\JSProject\\js_automated_testing_intro\\src\\tests\\numbers-validator\\isNumberEven.spec.js",
          "file": "\\src\\tests\\numbers-validator\\isNumberEven.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isAllNumbers tests\"",
              "fullTitle": "isAllNumbers tests \"before each\" hook in \"isAllNumbers tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "2621930e-b268-4a20-858c-47ff33455446",
              "parentUUID": "cd40c668-93cb-436e-aad2-72fc2489975c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isAllNumbers tests\"",
              "fullTitle": "isAllNumbers tests \"after each\" hook in \"isAllNumbers tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null",
              "err": {},
              "uuid": "927030fd-db18-4ada-b86f-4bd89188ff16",
              "parentUUID": "cd40c668-93cb-436e-aad2-72fc2489975c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return true when provided an array of numbers",
              "fullTitle": "isAllNumbers tests should return true when provided an array of numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrayOfNumbers = [3,5,7,9];\nconst newArrayOfNumbers = validator.isAllNumbers(arrayOfNumbers);\n//expect(newArrayOfNumbers).to.be.equal(true)\nassert.isTrue(newArrayOfNumbers)",
              "err": {},
              "uuid": "46bdfa2a-0339-40bd-9f5f-343cbfe71b35",
              "parentUUID": "cd40c668-93cb-436e-aad2-72fc2489975c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if array is not full of numbers",
              "fullTitle": "isAllNumbers tests should return false if array is not full of numbers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrayOfNumbers = [3,'5',7,9];\nconst newArrayOfNumbers = validator.isAllNumbers(arrayOfNumbers);\n//expect(newArrayOfNumbers).to.be.equal(false)\nassert.isFalse(newArrayOfNumbers)",
              "err": {},
              "uuid": "e54ce08d-cf7a-4a6d-b2d6-0fe3ef2c30ca",
              "parentUUID": "cd40c668-93cb-436e-aad2-72fc2489975c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when provided a number",
              "fullTitle": "isAllNumbers tests should throw an error when provided a number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n    validator.isAllNumbers(3);\n}).to.throw('[3] is not an array')",
              "err": {},
              "uuid": "30617769-ffdd-4bfe-b55b-9b94739903f6",
              "parentUUID": "cd40c668-93cb-436e-aad2-72fc2489975c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when provided a string",
              "fullTitle": "isAllNumbers tests should throw an error when provided a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n    validator.isAllNumbers('array');\n}).to.throw('[array] is not an array')",
              "err": {},
              "uuid": "568a5344-b93b-4fce-ac2e-5a3bdf3daa8f",
              "parentUUID": "cd40c668-93cb-436e-aad2-72fc2489975c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when no value is provided",
              "fullTitle": "isAllNumbers tests should throw an error when no value is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n    validator.isAllNumbers();\n}).to.throw('[undefined] is not an array')",
              "err": {},
              "uuid": "4834a9ce-f5d8-46ba-b8a6-05c5f8e56a8b",
              "parentUUID": "cd40c668-93cb-436e-aad2-72fc2489975c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46bdfa2a-0339-40bd-9f5f-343cbfe71b35",
            "e54ce08d-cf7a-4a6d-b2d6-0fe3ef2c30ca",
            "30617769-ffdd-4bfe-b55b-9b94739903f6",
            "568a5344-b93b-4fce-ac2e-5a3bdf3daa8f",
            "4834a9ce-f5d8-46ba-b8a6-05c5f8e56a8b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cc5ebf06-6043-4254-8ac7-f7651068ef02",
          "title": "isInteger tests",
          "fullFile": "C:\\JSProject\\js_automated_testing_intro\\src\\tests\\numbers-validator\\isNumberEven.spec.js",
          "file": "\\src\\tests\\numbers-validator\\isNumberEven.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isInteger tests\"",
              "fullTitle": "isInteger tests \"before each\" hook in \"isInteger tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "9cc2da8d-26a9-442b-a915-8288bda51124",
              "parentUUID": "cc5ebf06-6043-4254-8ac7-f7651068ef02",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true when provided a number",
              "fullTitle": "isInteger tests should return true when provided a number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const n = validator.isInteger(1);\nexpect(n).to.be.equal(true)",
              "err": {},
              "uuid": "24c85942-84f6-46e6-972f-72e5136ae19c",
              "parentUUID": "cc5ebf06-6043-4254-8ac7-f7651068ef02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when provided a string",
              "fullTitle": "isInteger tests should throw an error when provided a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n    validator.isInteger('string');\n}).to.throw('[string] is not a number')",
              "err": {},
              "uuid": "f25c1a07-c985-4770-a215-5236af094a03",
              "parentUUID": "cc5ebf06-6043-4254-8ac7-f7651068ef02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when no value is provided",
              "fullTitle": "isInteger tests should throw an error when no value is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n    validator.isInteger();\n}).to.throw('[undefined] is not a number')",
              "err": {},
              "uuid": "09872341-962b-4abc-951d-3fce9680c3ae",
              "parentUUID": "cc5ebf06-6043-4254-8ac7-f7651068ef02",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "24c85942-84f6-46e6-972f-72e5136ae19c",
            "f25c1a07-c985-4770-a215-5236af094a03",
            "09872341-962b-4abc-951d-3fce9680c3ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}